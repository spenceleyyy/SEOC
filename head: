Script started on Thu Aug 14 08:41:10 2025
ls 3 \
#         --model yolov8n.pt \
#         --conf 0.25 \
#         --save-csv tracks.csv
#
# In Google Colab (example cell):
#     !pip install -q ultralytics opencv-python pandas
#     from google.colab import drive; drive.mount('/content/drive')
#     !python person_tracking_stitch_grid.py \
#         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
#         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
#         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
#
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pandas as pd

# Lazy import ultraly
CondaError: Run 'conda init' before 'conda deactivate'


The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
[?1034hbash-3.2$ ls 3 \
#         --model yolov8n.pt \
#         --conf 0.25 \
#         --save-csv tracks.csv
#
# In Google Colab (example cell):
#     !pip install -q ultralytics opencv-python pandas
#     from google.colab import drive; drive.mount('/content/drive')
#     !python person_tracking_stitch_grid.py \
#         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
#         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
#         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
#
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pand> #         --model yolov8n.pt \
ls: 3: No such file or directory
#         --conf 0.25 \
#         --save-csv tracks.csv
#
# In Google Colab (example cell):
#     !pip install -q ultralytics opencv-python pandas
#     from google.colab import drive; drive.mount('/content/drive')
#     !python person_tracking_stitch_grid.py \
#         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
#         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
#         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
#
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pandas as pd

# Labash-3.2$ #         --conf 0.25 \
bash-3.2$ #         --save-csv tracks.csv
bash-3.2$ #
# In Google Colab (example cell):
#     !pip install -q ultralytics opencv-python pandas
#     from google.colab import drive; drive.mount('/content/drive')
#     !python person_tracking_stitch_grid.py \
#         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
#         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
#         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
#
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pandas as pd

# Lazy import ultralytics so h# Lazy import ultralytics so nstalled yet
def _import_ultralytics():bash-3.2$ # In Google Colab (example cell):
bash-3.2$ #     !pip install -q ultralytics opencv-python pandas
bash-3.2$ #     from google.colab import drive; drive.mount('/content/drive')
#     !python person_tracking_stitch_grid.py \
#         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
#         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
#         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
#
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pandas as pd

# Lazy import ultralytics so h# Lazy import ultralytics so nstalled yet
def _import_ultralytics():
    try:
        from ultralytics import YOLO
        return YOLO
    except Exception as e:
        print("E        print("E        print("E        printbash-3.2$ #     !python person_tracking_stitch_grid.py \
#         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
#         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
#         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
#
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pandas as pd

# Lazy import ultralytics so h# Lazy import ultralytics so nstalled yet
def _import_ultralytics():
    try:
        from ultralytics import YOLO
        return YOLO
    except Exception as e:
        print("E        print("E        print("E        print("E        print("E  ti        print("E    bash-3.2$ #         --inputs "/content/drive/MyDrive/vids/a.mp4" "/content/drive/MyDrive/vids/b.mp4" \
bash-3.2$ #         --out "/content/drive/MyDrive/vids/out_tracked.mp4" \
bash-3.2$ #         --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv "/content/drive/MyDrive/vids/tracks.csv"
bash-3.2$ #
# Notes:
#   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
#   - If your inputs have different sizes/fps, they are normalized to the first clip.
#   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.

import argparse
import sys
from pathlib import Path
import cv2
import numpy as np
import pandas as pd

# Lazy import ultralytics so h# Lazy import ultralytics so nstalled yet
def _import_ultralytics():
    try:
        from ultralytics import YOLO
        return YOLO
    except Exception as e:
        print("E        print("E        print("E        print("E        print("E  ti        print("E        print("E        printund inputs:
/content/drive/MyDrive/SEOC Video/Left_10s.mp4
/content/drive/MyDrive/SEOC Video/Right_10s.mp4
Running:
  /usr/bin/python3 /content/SEOC/person_tracking_stitch_grid.py --inputs /content/drive/MyDrive/SEOC Video/Left_10s.mp4 /content/drive/MyDrive/bash-3.2$ # Notes:
bash-3.2$ #   - IDs are provided by ByteTrack via Ultralytics with persist=True so they remain stable across the single stitched stream.
bash-3.2$ #   - If your inputs have different sizes/fps, they are normalized to the first clip.
bash-3.2$ #   - You can swap models (e.g., yolov8s.pt, yolov11n.pt) as long as Ultralytics supports them.
bash-3.2$ 
bash-3.2$ import argparse
bash: import: command not found
bash-3.2$ import sys
bash: import: command not found
bash-3.2$ from pathlib import Path
bash: from: command not found
bash-3.2$ import cv2
bash: import: command not found
bash-3.2$ import numpy as np
bash: import: command not found
bash-3.2$ import pandas as pd
bash: import: command not found
bash-3.2$ 
bash-3.2$ # Lazy import ultralytics so h# Lazy import ultralytics so nstalled yet
bash-3.2$ def _import_ultralytics():
bash: syntax error near unexpected token `('
bash-3.2$     try:
bash: try:: command not found
bash-3.2$         from ultralytics import YOLO
bash: from: command not found
bash-3.2$         return YOLO
bash: return: YOLO: numeric argument required
bash: return: can only `return' from a function or sourced script
bash-3.2$     except Exception as e:
bash: except: command not found
bash-3.2$         print("E        print("E        print("E        print("E        print("E  ti        print("E        print("E        printund inputs:
bash: syntax error near unexpected token `"E        print("E'
bash-3.2$ /content/drive/MyDrive/SEOC Video/Left_10s.mp4
bash: /content/drive/MyDrive/SEOC: No such file or directory
bash-3.2$ /content/drive/MyDrive/SEOC Video/Right_10s.mp4
bash: /content/drive/MyDrive/SEOC: No such file or directory
bash-3.2$ Running:
bash: Running:: command not found
bash-3.2$   /usr/bin/python3 /content/SEOC/person_tracking_stitch_grid.py --inputs /content/drive/MyDrive/SEOC Video/Left_10s.mp4 /content/drive/MyDrive/S EOC Video/Right_10s.mp4 --out /tmp/out_tracked.mp4 --grid-rows 3 --grid-cols 4 --model yolov8n.pt --conf 0.3 --save-csv /content/drive/MyDrive/SEOC Video/ tracks.csv
/Library/Developer/CommandLineTools/usr/bin/python3: can't open file '/content/SEOC/person_tracking_stitch_grid.py': [Errno 2] No such file or directory
bash-3.2$ 
bash-3.2$ 
bash-3.2$ 
bash-3.2$ cd /path/to/SEOC
bash: cd: /path/to/SEOC: No such file or directory
bash-3.2$ cd Desktop
bash: cd: Desktop: No such file or directory
bash-3.2$ cd user[K[K[K[KUsers [K/hotcokc[Kck[K[K[Kcks
bash: cd: Users/hotcocks: No such file or directory
bash-3.2$ ls
crop_left_video.py			person_tracking_stitch_grid.py		Right_10s.mp4
head:					person_tracking_stitch_grid.py.bak	stitch_cropped_videos.py
Left_10s.mp4				README.md				test_people_tracking.ipynb
bash-3.2$ 